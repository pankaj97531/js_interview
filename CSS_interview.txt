Q : Name all the modules which are used in the current version of CSS.

A : There are several modules in CSS as stated below:
	Selectors
	Box Model
	Backgrounds and Borders
	Text Effects
	2D/3D Transformations
	Animations
	Multiple Column Layout
	User Interface.
	
Q : What is Box Model : 

	All HTML elements can be considered as boxes. In CSS, the term "box model" is used when talking about design and layout.

	The CSS box model is essentially a box that wraps around every HTML element. It consists of: margins, borders, padding, and the actual content. The image below illustrates the box model:	
	
	Explanation of the different parts:

	Content - The content of the box, where text and images appear
	Padding - Clears an area around the content. The padding is transparent
	Border - A border that goes around the padding and content
	Margin - Clears an area outside the border. The margin is transparent
	The box model allows us to add a border around elements, and to define space between elements. 
	div {
	  width: 300px;
	  border: 15px solid green;
	  padding: 50px;
	  margin: 20px;
	}
	
Q : Distinguish between CSS2 and CSS3.

A : The differences between CSS2 and CSS3 are as follows:
	CSS3 is divided into two various sections which are called a module. Whereas in CSS2 everything accedes into a single document with all the information in it.
	CSS3 modules are supported almost on every browser and on the other hand modules of CSS and CSS2 are not supported in every 
	browser.
	In CSS3, we will find that many graphics related characteristics have been introduced like Border-radius or box-shadow, flexbox.	
	In CSS3, a user can precise multiple background images on a webpage by using properties like background-image, background-position, and background-repeat styles.
	
	{
	https://www.lifewire.com/css2-vs-css3-3466978
	https://www.quora.com/What-are-the-differences-between-CSS2-and-CSS3
	}
	
Q : Cite different types of CSS.

A : There are three types of CSS as mentioned below:
	External: These are written in separate files.
	Internal: These are cited at the top of the web page code document.
	Inline: These are written right next to the text.

Q : Explain the concept of Tweening.

A : Tweening is the process in which we create intermediate frames between two images to get the appearance of the first
	 image which develops into the second image.
	
Q : What are gradients in CSS?

A : It is a property of CSS which allows you to display a smooth transformation between two or more than two specified colors.
	There are two types of gradients that are present in CSS. 
	They are:
	Linear Gradient
	Radial Gradient
	
Q : What is CSS flexbox?

A : It allows you to design a flexible responsive layout structure without using any float or positioning property of CSS. 
	To use CSS flexbox you need to define a flex container initially.
	<!DOCTYPE html>
	<html>
	<head>

	<style>
	.flex-container {
	  display: flex;
	  background-color: #f4b042;
	}

	.flex-container > div {
	  background-color: #d60a33;
	  margin: 10px;
	  padding: 20px;
	  font-size: 30px;
	}

	</style>
	</head>

	<body>
	<div class="flex-container">
	  <div>1</div>
	  <div>2</div>
	  <div>3</div> 
	</div>
	<p> Example of  <em>flex</em>box.</p>
	</body>
	</html>

Q : Write all the properties of the flexbox.

A : There are several properties of the flexbox that are used in the HTML webpage.
	They are:
	flex-direction
	flex-wrap
	flex-flow
	justify-content
	align-items
	align-content
	
Q : CSS Text Properties

A : Text-align	
	text-lign-last
	text-transform
	text-indent
	word-spacing
	letter-apcing
	
Q : White space values

A : Normal
	Nowrap
	Pre
	pre-line
	pre-wrap

Q : What is the difference between padding and margin?

A : In CSS, the margin is the property by which we can create space around elements. 
	We can even create space to the exterior defined borders.
	
	In CSS, padding is the property by which we can generate space around an element’s content as well as inside any known border.

Q : What is the use of the Box Model in CSS?

	In CSS, the box model is a box that binds all the HTML elements and it includes features like content, padding,margins, border. 

	By using a box model we will get the authority to add the borders all around the elements and we can also define the space between the elements.

Q : What are the differences between relative and absolute in CSS?

	The main difference between relative and absolute is that “relative” is used for the same tag in CSS and it means that 
	if we write the left:10px then the padding will shift to 10px in the left while absolute is totally relative to the non-static parent.
	It means, if we write left:10px then the result will be 10px far from the left edge of the parent element.

Q : Define ‘important’ declarations used in CSS.

	Important declarations are defined as that declaration which is having more importance than the normal declaration.

Q : What does the "+" (plus sign) CSS selector mean?

	The "+" sign selector is used to select the elements that are placed immediately after the specified element but not inside 
	the particular elements. Adjacent sibling selectors. 
	
Q : What does the ">" (plus sign) CSS selector mean?

A : Used to directly with in element. 

Q :  What does the "~" (plus sign) CSS selector mean?

A : General sibling selectors.

Q : CSS Pseudo-Classes Selectors

	:first-child , :lst-child, :nth-child(), :empty, :link, :hover, :visited, :active, :target, :focus, :checked, :disabled, :enbale, :required, :valid, :invalid, :default, :root 
	
Q : Differentiate between inline and block element.

	Inline element does not have an element to set width and height and also it does not have the line break.
	Example: em, strong, etc.
	Block element specification:
	They do have the line break.
	They define the width by setting a container and also allow setting height.
	It can also contain an element that occurs in the inline element.

	Example:
	width and height
	max-width and max-height
	min-width and min-height
	hi (i=1-6)- heading element
	p- Paragraph element.

Q : Semantic UI

Q : Difference between flexbox and grid	
	
	The basic difference between CSS Grid Layout and CSS Flexbox Layout is that flexbox was designed for layout in one dimension - either a row or a column. Grid was designed for two-dimensional layout - rows, and columns at the same time. 
	
Q : Short notes on flexbox

	New module in css3 to easy align elemnt in different direction and orders.
	
	Flexbox gives ability to container to expand and shrink to best use of all available space.
	
	Flexbox layout replaces float layout 
	
	New way to build one dimentional layout(either row or column)
	
	Properties  : 
	
	display : flex It applies on parent div and all child element are flex items
	
	flex-direction : row(by default),row-reverse,column,column-reverse applies on parent
	
	flex-wrap : nowrap(by default),wrap,wrap-reverese used for handle overflow problem, apply on parent
	
	flex-flow : flex-direction flex-wrap
	
	justify-content : horizontal alignment ,(flex-start(by default), flex-end, center, space-around, space-between, space-evenly) apply on parent
	
	align-items : vertival alignment(work if height given), work on parent ,flex-start, flex-end, center, stretch(by default), baseline
	
	align-content : vertical-alignment,used with only flexwrap and content will come under second row, apply on parent,flex-start, flex-end, center, stretch(by default)
	
	align-self : vertical alignment, apply on child , flex-start, flex-end, center, stretch(by default), baseline
	
	flex-grow : work on child , used for define dynamic width, flex-grow : 1
	
	flex-basic : work for child and for max-width, used for handle flex-item width
	
	flex-shrink : work on child ,used for responsive,
	
Q : Short notes on grid layout
	
	Two dimensional grid system(rows and column can handle)
	
	CSS grid layout replaces float layout
	
	Fast and clean code
	
	No need of CSS framework.
	
	properties : 
	
	display : grid(apply on grid) but it won't affect anything
	
	position properties of grid layout for parent
	
	grid-template-rows,grid-template-columns : (used fr(means fraction) repeat function) we can used pixcel percentage.Apply on parent
	
	grid-gap : in this properties two properties are mixed (grid-row-gap,grid-column-gap).apply on parent
	
	grid-template-area : "header header header"
						 "Box1 Box2 sidebar"
						 "content content sidebar"
						 "footer footer footer"

	naming convention in grid-template-rows and grid-template-columns : [header-start]100px [header-end box-start] 200px [box-end content-start] 250px [content-end footer-start] 50px [footer-end];
	
	Grid position of Child Elment : 
	
	grid-row : combination of two properties. grid-row-start,grid-row-end
	
	grid-column : combination of two properties . grid-column-start,grid-column-end
	
	grid-area : combination of grid-row grid-column
	 	
Q : Which CSS feature is not working on all browser.

	gradient , 
	
	Firefox uses the Gecko rendering engine.
	
	


Q : Why we are using float left,Flexbox when grid layout can handle all thing.

	HTML render work on block element direction, inline element direction and float properties.
	
	We are using flexbox and grid layout on certain part of wepage.Both flexbox and grid only handle single container.
	
	Flexbox lines things up in one direction(either row or column).When we use flexbox browser only things about only one direction.
	
	Grid layout lines things in two direction. When we use grid layout browser thinks about rows and column.
 	
Q : what is specificity in css.

	If there are two or more conflicting CSS rules that point to the same element, the browser follows some rules to determine which one is most specific 
	
	example : div has less priority than div with class.div with class less priority than div with id.
	!importance has higher priority than any other css.
	
Q : How to align a block elemnt inside other element.

	
	example : <div class="outer">
					<div class="inner"></div>
				</div> 
			.outer{
				margin: 100px;
				width: 300px;
				height: 300px;
				background: yellow;
				border: 1px solid black;
				position: relative;
			}
			.inner{
				position: absolute;
				top: 50%;
				left: 50%;
				width: 100px;
				height: 100px;
				background: green;
				border: 1px solid red;
				transform: translate(-50%,-50%);
			}

Q : How to make triangle in css.

	example  : <div class="triangle">
				</div>			
		
				.triangle{
					margin: 100px;
					width: 0;
					height: 0;
					border-bottom: 100px solid red;
					border-top: 100px solid transparent;
					border-left: 100px solid transparent;
					border-right: 100px solid transparent;
				}